function opt = GBPRBM_Plot_HEntropy_vs_HBias_3H_Analysis(varargin)
% This function plots hidden entropy of the Gaussian-Bipolar Restricted
% Boltzmann Machine (GBPRBM) with three hidden units as a function of
% hidden bias using both empirical evaluation and analytical solution
% of the high hidden entropy regions.

% Usage:
% Just run without arguments:
%             GBPRBM_Plot_HEntropy_vs_HBias_3H_Analysis
% Or pass a structure with parameters, look down below for the details
%             GBPRBM_Plot_HEntropy_vs_HBias_3H_Analysis(opt)


% Author: Altynbek Isabekov
% E-mail: aisabekov [at] ku.edu.tr

%% ================== Setting Parameters of the GBPRBM Model ==============
if ~isempty(varargin)
    if length(varargin) >=1
        if isstruct(varargin{1})
            opt = varargin{1};
            % Unpack structure
            unpack_struct(opt); 
            if H~=3
                error('Number of hidden units is not equal to 3. Quitting.')
            end
            if sum(size(W)== [V H]) ~= 2
                error('Matrix W is not of size VxH. Quitting.')
            end
            if length(sigma_v)~= V
                error('Vector sigma_v is not of length V. Quitting.')
            end 
            if length(b_v)~= V
                error('Vector b_v is not of length V. Quitting.')
            end                  
        end
    end
else
    %% Usage: pass structure "opt" as an argument to this function
    % Number of visible units
    opt.V = 2;
    % Visible bias
    opt.b_v = [10 12 ]';
    % Standard deviations for visible units
    opt.sigma_v = [2 3 ]';
    % Covariance-like matrice
    opt.S = diag(opt.sigma_v.^2);
    % Covariance-like matrice's inverse
    opt.Sinv = diag(1./(opt.sigma_v.^2));
    % Number of hidden units
    opt.H = 3;
    % Camera position
    opt.View_Elevation = 38;
    opt.View_Azimuth = 233;
    % Weight matrix of size (V x H)
    opt.W = [-9   2  8; ...
              2  -4  0];       
    % Entropy level at which to plot an isosurface          
    opt.Entropy_Level = 0.92;
    % Transparency value of the surfaces
    opt.Alpha_Transparency = 0.8;
    % Number of samples used for quantization of b_h(1), b_h(2) and b_h(3)
    opt.N_Samples = [100 101 102];
    opt.FontSize = 10;
    opt.Color_Map = jet(64); 
    % Span ratio for all axes
    opt.HRatio = [0.6 0.6 0.6];
    unpack_struct(opt); 
end

figure('Name', 'Hidden Entropy vs. Hidden Bias (Experiment and Theory)', ...
   'Units', 'normalized', 'Position', [0.0198, 0.3021, 0.5488, 0.4036], ...
   'NumberTitle', 'Off', 'Toolbar', 'figure');
cameratoolbar;

% ============================ Azimuth ====================================
Text_Azimuth.x = 0.1;
Text_Azimuth.y = 0.06;
Text_Azimuth.width = 0.1;
Text_Azimuth.height = 0.1;
uicontrol( ...
    'Parent', gcf, ...
    'Tag', 'Text_Azimuth', ...
    'Style', 'text', ...
    'Min', 0, 'Max', 360, ...
    'SliderStep', [1/360 5/360], ...
    'Units', 'normalized', ...
    'Position', [Text_Azimuth.x,     Text_Azimuth.y, ...
                 Text_Azimuth.width, Text_Azimuth.height], ...
    'FontName', 'Helvetica', ...
    'FontSize', 10, ...
    'BackgroundColor', [0.8 0.8 0.8], ...
    'String', 'Azimuth');

Slider_Azimuth.x = 0.2;
Slider_Azimuth.y = 0.06;
Slider_Azimuth.width = 0.25;
Slider_Azimuth.height = 0.1;
h_Slider_Azimuth = uicontrol( ...
    'Parent', gcf, ...
    'Tag', 'Slider_Azimuth', ...
    'Style', 'slider', ...
    'Min', 0, 'Max', 360, ...
    'SliderStep', [1/360 5/360], ...
    'Units', 'normalized', ...
    'Position', [Slider_Azimuth.x,     Slider_Azimuth.y, ...
                 Slider_Azimuth.width, Slider_Azimuth.height], ...
    'FontName', 'Helvetica', ...
    'FontSize', 10, ...
    'BackgroundColor', [0.8 0.8 0.8], ...
    'String', 'Slider_Azimuth', ...
    'Value', View_Azimuth, ...
    'Callback', @Slider_Azimuth_Callback);

% ============================ Elevation ==================================
Text_Elevation.x = 0.5;
Text_Elevation.y = 0.06;
Text_Elevation.width = 0.1;
Text_Elevation.height = 0.1;
uicontrol( ...
    'Parent', gcf, ...
    'Tag', 'Text_Elevation', ...
    'Style', 'text', ...
    'Min', 0, 'Max', 360, ...
    'SliderStep', [1/360 5/360], ...
    'Units', 'normalized', ...
    'Position', [Text_Elevation.x,     Text_Elevation.y, ...
                 Text_Elevation.width, Text_Elevation.height], ...
    'FontName', 'Helvetica', ...
    'FontSize', 10, ...
    'BackgroundColor', [0.8 0.8 0.8], ...
    'String', 'Elevation');
Slider_Elevation.x = 0.6;
Slider_Elevation.y = 0.06;
Slider_Elevation.width = 0.25;
Slider_Elevation.height = 0.1;
h_Slider_Elevation = uicontrol( ...
    'Parent', gcf, ...
    'Tag', 'Slider_Elevation', ...
    'Style', 'slider', ...
    'Min', 0, 'Max', 90, ...
    'SliderStep', [1/90 5/90], ...
    'Units', 'normalized', ...
    'Position', [Slider_Elevation.x,     Slider_Elevation.y, ...
                 Slider_Elevation.width, Slider_Elevation.height], ...
    'FontName', 'Helvetica', ...
    'FontSize', 10, ...
    'BackgroundColor', [0.8 0.8 0.8], ...
    'String', 'Slider_Elevation', ...
    'Value', View_Elevation, ...
    'Callback', @Slider_Elevation_Callback);

% ================= Empirical Computation =====================
Axes_Emp.x = 0.1;
Axes_Emp.y = 0.3;
Axes_Emp.width = 0.35;
Axes_Emp.height = 0.6;
h_Axes_Emp = axes('Position', [Axes_Emp.x,     Axes_Emp.y, ... 
                               Axes_Emp.width, Axes_Emp.height]);
opt.h_axes = h_Axes_Emp;
opt = GBPRBM_Plot_HEntropy_vs_HBias_3H_Experiment(opt);
opt.h_title1 = opt.h_title;

% ================= Theoretical Computation ===================
Axes_Thr.x = 0.5;
Axes_Thr.y = 0.3;
Axes_Thr.width = 0.35;
Axes_Thr.height = 0.6;
h_Axes_Thr = axes('Position', [Axes_Thr.x,     Axes_Thr.y, ...
                               Axes_Thr.width, Axes_Thr.height]);
opt.h_axes = h_Axes_Thr;
opt = GBPRBM_Plot_HEntropy_vs_HBias_3H_Theory(opt);
opt.h_title2 = opt.h_title;
set(gcf, 'Renderer', 'zbuffer');

% Append handle data
setappdata(h_Slider_Azimuth, 'h_Axes_Emp',h_Axes_Emp);
setappdata(h_Slider_Azimuth, 'h_Axes_Thr',h_Axes_Thr);
setappdata(h_Slider_Azimuth, 'h_Slider_Elevation',h_Slider_Elevation);

setappdata(h_Slider_Elevation, 'h_Axes_Emp',h_Axes_Emp);
setappdata(h_Slider_Elevation,'h_Axes_Thr',h_Axes_Thr);
setappdata(h_Slider_Elevation, 'h_Slider_Azimuth',h_Slider_Azimuth);